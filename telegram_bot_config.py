from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup,
    Update,
    Bot,
)
import telegram.ext as te
import tracemalloc
import answer_bot as answer
import sqlite3 as sqlite
import uuid as uid
# import datetime as date
tracemalloc.start()

print("Bot started ...")

TOKEN =""
bot = Bot(token=TOKEN)
# Cr√©ez la connexion √† la base de donn√©es
data_user = sqlite.connect('user_data.db')

# Cr√©ez un curseur
cursor = data_user.cursor()

# Cr√©ez la table si elle n'existe pas d√©j√†
cursor.execute(
    """CREATE TABLE IF NOT EXISTS users (
                    id INTEGER PRIMARY KEY,
                    telegram_id INTEGER UNIQUE,
                    full_name TEXT,
                    balance REAL DEFAULT 0,
                    referrer_id INTEGER,
                    public_key TEXT UNIQUE,
                    CONSTRAINT fk_referrer FOREIGN KEY (referrer_id) REFERENCES users(id)
                )"""
)
data_user.commit()
def generate_public_key():
    return str(uid.uuid4())


def register_user(telegram_id: int, full_name: str, referrer_id: int = None):
    try:
        public_key = generate_public_key()
        cursor.execute('''INSERT OR IGNORE INTO users (telegram_id, full_name, referrer_id, public_key)
                        VALUES (?, ?, ?, ?)''', (telegram_id, full_name, referrer_id, public_key))
        data_user.commit()
    except sqlite.IntegrityError:
        # Si l'ID utilisateur existe d√©j√†, mettez √† jour le nom complet
        cursor.execute(
            """UPDATE user_data SET full_name = ? WHERE telegram_id = ?""",
            (full_name, telegram_id),
        )
        data_user.commit()
    except Exception as e:
        print(f"Erreur register user : {e}")

def update_balance(telegram_id:int, amount:float,options:str):
    if options.lower() == "up":
        cursor.execute('''UPDATE users SET balance = balance + ? WHERE telegram_id = ?''', (amount, telegram_id))
    elif options.lower() == "down":
        cursor.execute('''UPDATE users SET balance = balance - ? WHERE telegram_id = ?''', (amount, telegram_id))
    data_user.commit()

async def handle_start(update: Update, context: te.CallbackContext):
    try:
        args = context.args
        referrer_public_key = None
        if args:
            referrer_public_key = args[0]
            cursor.execute('''SELECT id, telegram_id FROM users WHERE public_key = ?''', (referrer_public_key,))
            result = cursor.fetchone()
            referrer_id = result[0] if result else None
            referrer_telegram_id = result[1] if result else None
        else:
            referrer_id = None
            referrer_telegram_id = None

        telegram_id = update.message.from_user.id
        full_name = f"{update.message.from_user.first_name} {update.message.from_user.last_name or ''}".strip()

        register_user(telegram_id, full_name, referrer_id)

        if referrer_id and referrer_telegram_id != telegram_id:
            update_balance(referrer_id, 10,"up")
        await update.message.reply_text(f"""üéâ Bienvenue {full_name}, mon nom est Tools Bot et je suis ici pour vous aider. Si vous d√©sirez savoir comment m'utiliser, entrez la commande /help .""")
        await context.bot.send_message(
            chat_id=5728776632,
            text=f"""Nouveau utilisateur {full_name}""",)
    except Exception as e:
        print(f"Erreur dans handle_start: {e}")


async def handle_paypal(update: Update, context: te.CallbackContext):
    try:
        keyboard = [
            [
                InlineKeyboardButton(
                    "Cr√©e un Compte Paypal",
                    url="https://paypal.com/ae",
                )
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await answer.get_free_data("compte_paypal", chat_id=update.effective_chat.id)
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"{update.message.from_user.first_name} pour cr√©e votre compte paypal cliquez sur le bouton ci-dessous\nNB: Veuillez utilis√© la vid√©o comme un guide",
            reply_markup=reply_markup,
        )

    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©ssayer encore.
""",
        )


async def handle_cb(update: Update, context: te.CallbackContext):
    try:
        await answer.get_free_data("carte_credit", chat_id=update.effective_chat.id)
        #print("carte credit")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )

async def freesurf_config(update: Update, context: te.CallbackContext):
    try:
        await update.message.reply_text(""""
üöß(P√©tite Suggestion pour vous)

Avant de continuer veuillez vous assurez que
vous avez remplire ses conditions :

-avoir cr√©e un compte paypal ,sinon cliquez ici : /compte_paypal
-avoir cr√©e un compte free surf ,sinon cliquez ici : /compte_free_surf
-avoir li√©e sa carte de cr√©dit a son compte paypal ,sinon cliquez ici : /compte_paypal
-avoir cr√©e et r√©charg√© sa carte de cr√©dit ,sinon cliquez ici : /compte_djamo
-avoir ach√©t√© un abonn√©ment , sinon cliquez ici : /abonnement_freesurf
""")
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
Il faut suivre la vid√©o attentivement.\n
PS :üéØ lorsque vous arrivez sur la partie qui pr√©sente un tableau, veuillez choisir une pr√©f√©rence (PREF) sup√©rieure ou √©gale √† 8.
""",
        )

        await answer.get_free_surf_config(chat_id=update.effective_chat.id)
        #print("free surf config")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def compte_freesurf(update: Update, context: te.CallbackContext):
    try:
        keyboard = [
            [
                InlineKeyboardButton(
                    "Cr√©e un Compte",
                    url="https://www.your-freedom.net/?referer=31573181",
                )
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await answer.get_free_data("compte_free_surf", chat_id=update.effective_chat.id)
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"{update.message.from_user.first_name} pour cr√©e votre compte cliquez sur le bouton ci-dessous",
            reply_markup=reply_markup,
        )

        # print("compte_free_surf")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def codes_roadmap(update: Update, context: te.CallbackContext):
    try:
        keyboards = [
            [KeyboardButton("/roadmap_c++"), KeyboardButton("/roadmap_java")],
            [KeyboardButton("/roadmap_php"), KeyboardButton("/roadmap_html")],
            [KeyboardButton("/roadmap_c#"), KeyboardButton("/roadmap_css")],
            [KeyboardButton("/roadmap_javascript"),KeyboardButton("/roadmap_python")],
            #[],
        ]
        reply_markup = ReplyKeyboardMarkup(
            keyboard=keyboards, one_time_keyboard=False, resize_keyboard=True
        )
        #print("codes roadmap")
        await update.message.reply_text(
            f"{update.message.from_user.first_name} cette fonctionnalit√© est en cours de maintenance. D√®s qu'elle sera disponible, je te ferai savoir.",
            reply_markup=reply_markup,
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def compte_djamo(update: Update, context: te.CallbackContext):
    try:
        await answer.get_free_data("compte_djamo", chat_id=update.effective_chat.id)
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"{update.message.from_user.first_name} pour me soutenir, utilisez ce code d'invitation üòå: KKYB0",
        )
        #print("compte_djamo")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def help_cmd(update: Update, context: te.CallbackContext):
    try:
        keyboards = [
            [KeyboardButton("/help_user"), KeyboardButton("/about")],
            [KeyboardButton("/documentation")],
        ]
        reply_markup = ReplyKeyboardMarkup(
            keyboard=keyboards, resize_keyboard=True, one_time_keyboard=False
        )
        await update.message.reply_text(
            "üìåAvez-vous besoin d'aide ? , pour voir la liste des commandes ainsi que leurs r√¥le entrez la commande /documentation", reply_markup=reply_markup
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def doc(update: Update, context: te.CallbackContext):
    await update.message.reply_text(answer.doc(update.message.from_user.first_name))


async def about(update: Update, context: te.CallbackContext):
    try:
        user_name = update.message.from_user.first_name
        await update.message.reply_text(
            f"""
Pr√©sentation de Tools Bot

{user_name},

Tools Bot est con√ßu pour aider un grand nombre de personnes en offrant divers services.

Vous pouvez apprendre la programmation d‚Äôapplications et de sites web, explorer le hacking √©thique, profiter d‚Äôune connexion internet illimit√©e, b√©n√©ficier d‚Äôune assistance virtuelle pour affiner vos comp√©tences, et bien plus encore.

De plus, nous fournissons des conseils pratiques pour les d√©butants en informatique .

Notre objectif est de rendre l‚Äôinformatique accessible √† tous et de vous accompagner dans votre apprentissage. Le cr√©ateur de Tools Bot n‚Äôa pas de but lucratif, mais vise √† r√©pondre aux probl√©matiques rencontr√©es par de nombreuses personnes dans ce monde interconnect√©. Nous visons √† toucher et aider un grand nombre de personnes.

Pour que l‚Äôobjectif de Tools Bot devienne une r√©alit√©, nous vous prions, cher {user_name}, d‚Äôinviter le maximum de personnes souhaitant b√©n√©ficier des avantages que vous avez actuellement.

Afin de nous motiv√© √† vous aider encore plus dans le future .

Cordialement,
L‚Äô√©quipe Tools Bot
"""
        )
        #et permettons le t√©l√©chargement de vid√©os et de playlists YouTube
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )

# Mais ce n‚Äôest pas tout : √† chaque fois que vous invitez une personne avec votre lien de parrainage, vous cumulez des TB. Ces TB vous seront utiles pour obtenir un code fourni par Tools Bot, qui vous permettra d‚Äôactiver votre compte Free Surf et de profiter d‚Äôune connexion illimit√©e pendant 14 jours si vous atteignez 100 TB. Pour chaque personne invit√©e utilisant votre lien, vous recevrez 10 TB.
# Pour consulter votre compte et visualiser votre lien de parrainage, entrez la commande : /my_account .
async def handle_msg(update: Update, context: te.CallbackContext):
    try:
        await update.message.reply_text(
            answer.handle_msgs(update.message.text, update.message.from_user.first_name)
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def access_learn(update: Update, context: te.CallbackContext):
    try:
        keyboards = [
            [KeyboardButton("/cours_code"), KeyboardButton("/hacking")],
            [KeyboardButton("/free_surf"), KeyboardButton("/help_novice")],
            #[KeyboardButton("/youtube_downloader")],
            [KeyboardButton("/assistente_virtuelle")],
        ]
        reply_markup = ReplyKeyboardMarkup(
            keyboard=keyboards, one_time_keyboard=False, resize_keyboard=True
        )
        await update.message.reply_text(
            f"En attente de votre requ√™te {update.message.from_user.first_name}",
            reply_markup=reply_markup,
        )
        #print("access_learn")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def assistente_virtuelle(update: Update, context: te.CallbackContext):
    try:
        keyboard = [
            InlineKeyboardButton("Assistente Virtuelle", url="https://chatgpt.com/")
        ]
        reply_markup = InlineKeyboardMarkup([keyboard])
        await update.message.reply_text(
            f"{update.message.from_user.first_name}, votre assistance virtuelle est pr√™te. Cliquez sur le bouton ci-dessous pour d√©marrer vos requ√™tes.",
            reply_markup=reply_markup,
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def choose_lang(update: Update, context: te.CallbackContext):
    try:
        keyboards = [
            [KeyboardButton("/python"), KeyboardButton("/java")],
            [KeyboardButton("/html"), KeyboardButton("/css")],
            [KeyboardButton("/php"), KeyboardButton("/c++")],
            [KeyboardButton("/c"), KeyboardButton("/c#")],
            [KeyboardButton("/javascript")],
        ]
        reply_markup = ReplyKeyboardMarkup(
            keyboard=keyboards, resize_keyboard=True, one_time_keyboard=False
        )
        await update.message.reply_text(
            f"""
üéØ {update.message.from_user.first_name}
PS: Si vous √™tes d√©butant dans l'univers de la programmation,
je vous sugg√®re d'entrer la commande /help_novice pour savoir
comment d√©buter et quel langage de programmation choisir
afin de ne pas √™tre d√©courag√©. Dans le cas contraire, vous
pouvez choisir votre langage.
""",
            reply_markup=reply_markup,
        )
        #print("choose_lang")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def handle_get_data(update: Update, context: te.CallbackContext):
    try:
        await answer.get_data(update.message.text, update.effective_chat.id)
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def download_ytb_cmd(update: Update, context: te.CallbackContext):
    try:
        await update.message.reply_text(
            f"{update.message.from_user.first_name} cette fonctionnalit√© est en cours de maintenance. D√®s qu'elle sera disponible, je te ferai savoir."
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def hacking_ethique(update: Update, context: te.CallbackContext):
    try:
        await answer.get_data(update.message.text, update.effective_chat.id)
        # print("hacking_ethique")
    except:
        """await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""#{update.message.from_user.first_name}
# une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
# R√©ssource sera disponible le {date.datetime(2024, 8, 8, 24, 00, 00)}
""",
        )"""

async def handle_abonnement(update: Update, context: te.CallbackContext):
    try:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="""
üöß(P√©tite Suggestion pour vous)

Avant de continuer veuillez vous assurez que
vous avez remplire ses conditions :

-avoir cr√©e un compte paypal ,sinon cliquez ici : /compte_paypal
-avoir cr√©e un compte free surf ,sinon cliquez ici : /compte_free_surf
-avoir li√©e sa carte de cr√©dit a son compte paypal ,sinon cliquez ici : /compte_paypal
-avoir cr√©e et r√©charg√© sa carte de cr√©dit ,sinon cliquez ici : /compte_djamo

Pour ach√©ter un abonnnement je vous
sugg√®re de faire ceux-ci :

1-Choisir uniquement selon vos b√©soins
   les differents abonn√©ments qui ont pour
   titre ( Mobile plus)

2-Si vous n'avez pas trop de moyens choisissez
   uniquement les differents abonn√©ment
   qui ont pour titre (Mobile)

3-Vous pouvez convertir les differents
   prix dans votre d√©vise

4-Pour l'abonn√©ment veuillez tout d'abord
   vous connectez a votre compte paypal

1-Remarquer : - bien pour un mois de connexion illimit√©
vous d√©pensez 651.10 FCFA + 500FCFA de frais
avec l'abonnement mobile (regardez dans les images fournir
pour bien visualis√© et savoir o√π vous pouvez convertir les
differents prix d'abonn√©ment dans votre d√©vise)

2-Remarquer : - bien pour un mois de connexion illimit√©
vous d√©pensez 1302.20 FCFA + 500FCFA de frais
avec l'abonnement mobile plus (regardez dans les images fournir
pour bien visualis√© et savoir o√π vous pouvez convertir les
differents prix d'abonn√©ment dans votre d√©vise)

NB :veuillez m√™ttre des frais supplementaire
d'au moins 500 FCFA pour les pays de la
CEDEAO, qui inclus des frais de r√©jet pour
ceux qui utilise DJAMO , ainsi que pour le
payement de l'abonn√©ment cet motant (500 fcfa) ne
sera pas totalement d√©bit√© mais c'est pour que vous
ne puissiez pas ressentir de la frustration comme
moi lorsque j'avais essay√© pour la premier fois
d'effectu√© un abonn√©ment .
""")
        keyboard = [
            [
                InlineKeyboardButton(
                    "Abonnement free surf",
                    url="https://www.your-freedom.net/?referer=31573181",
                )
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await answer.get_free_data("abonnement_yourfreedom", update.effective_chat.id)
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"{update.message.from_user.first_name} pour achetez un abonnement free surf(yourfreedom) veuillez cliquez sur le bouton ci-dessous",
            reply_markup=reply_markup,
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def free_surf(update: Update, context: te.CallbackContext):
    try:
        keyboards = [
            [KeyboardButton("/freesurf_config"), KeyboardButton("/compte_paypal")],
            [KeyboardButton("/demo_free_surf"), KeyboardButton("/compte_djamo")],
            [KeyboardButton("/compte_free_surf"), KeyboardButton("/carte_credit")],
            [KeyboardButton("/abonnement_freesurf")],
            [KeyboardButton("/partage_freesurf")],
        ]
        name = update.message.from_user.first_name
        reply_markup = ReplyKeyboardMarkup(
            keyboard=keyboards, resize_keyboard=True, one_time_keyboard=False
        )
        await update.message.reply_text(
            answer.explained_free_surf(name), reply_markup=reply_markup
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def demo_freesurf(update: Update, context: te.CallbackContext):
    try:
        await answer.get_free_data("demo_free_surf", chat_id=update.effective_chat.id)
        #print("demo_freesurf")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


"""async def help_novice_codage(update: Update, context: te.CallbackContext):
    try:
        await update.message.reply_text(
            f"{update.message.from_user.first_name} cette fonctionnalit√© est en cours de maintenance. D√®s qu'elle sera disponible, je te ferai savoir."
        )
        print("help_novice")
    except Exception as e:
        print(f"Error in help_novice: {e}")"""


async def helper_novice(update: Update, context: te.CallbackContext):
    try:
        keyboards = [
            [KeyboardButton("/hacking_roadmap"), KeyboardButton("/codes_roadmap")],
            # [KeyboardButton("/help_novice")],
        ]
        reply_markup = ReplyKeyboardMarkup(
            keyboard=keyboards, one_time_keyboard=False, resize_keyboard=True
        )
        await update.message.reply_text(
            f"En attente de votre requ√™te {update.message.from_user.first_name}",
            reply_markup=reply_markup,
        )
        #print("help novice")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )


async def partage_freesurf(update: Update, context: te.CallbackContext):
    try:

        await update.message.reply_text(f""""
üöß(P√©tite Suggestion pour vous)

Avant de continuer veuillez vous assurez que
vous avez remplire ses conditions :

-avoir cr√©e un compte paypal ,sinon cliquez ici : /compte_paypal
-avoir cr√©e un compte free surf ,sinon cliquez ici : /compte_free_surf
-avoir li√©e sa carte de cr√©dit a son compte paypal ,sinon cliquez ici : /compte_paypal
-avoir cr√©e et r√©charg√© sa carte de cr√©dit ,sinon cliquez ici : /compte_djamo
-avoir ach√©t√© un abonn√©ment , sinon cliquez ici : /abonnement_freesurf

üòÄ Bonvisionnage {update.message.from_user.first_name}"
        """)
        await answer.get_free_data("partage_freesurf", chat_id=update.effective_chat.id)
        #print("partage_freesurf")
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"""{update.message.from_user.first_name}
une erreur est survenue lors du traitement de votre requ√™te veuillez r√©essayer encore.
""",
        )

app = te.Application.builder().token(TOKEN).build()
app.add_handler(te.CommandHandler("start", handle_start))
app.add_handler(te.CommandHandler("freesurf_config", freesurf_config))
app.add_handler(te.CommandHandler("compte_paypal", handle_paypal))
app.add_handler(te.CommandHandler("carte_credit", handle_cb))
app.add_handler(te.CommandHandler("compte_djamo", compte_djamo))  #
app.add_handler(te.CommandHandler("help_novice", helper_novice))  #
app.add_handler(te.CommandHandler("codes_roadmap", codes_roadmap))  #
app.add_handler(te.CommandHandler("compte_free_surf", compte_freesurf))  #
app.add_handler(te.CommandHandler("help", help_cmd))
app.add_handler(te.CommandHandler("documentation", doc))
app.add_handler(te.CommandHandler("about", about))
app.add_handler(te.MessageHandler(te.filters.Regex(r"(help_user|start)"), handle_msg))
app.add_handler(te.CommandHandler("access_learn", access_learn))
app.add_handler(te.CommandHandler("assistente_virtuelle", assistente_virtuelle))
app.add_handler(te.CommandHandler("cours_code", choose_lang))
app.add_handler(
    te.MessageHandler(
        te.filters.Regex(
            r"(c#|c\+\+|css|javascript|c|php|html|python|hacking|java|roadmap_c\+\+|roadmap_java|roadmap_php|roadmap_html|roadmap_c#|roadmap_css|roadmap_javascript|roadmap_python|roadmap_hack)"
        ),
        handle_get_data,
    )
)
# hacking_roadmap keyword ,
# app.add_handler(te.CommandHandler("youtube_downloader", download_ytb_cmd))
app.add_handler(te.CommandHandler("hacking", hacking_ethique))
app.add_handler(te.CommandHandler("abonnement_freesurf", handle_abonnement))
app.add_handler(te.CommandHandler("free_surf", free_surf))
app.add_handler(te.CommandHandler("demo_free_surf", demo_freesurf))
# app.add_handler(te.CommandHandler("hacking_roadmap", roadmap_hack))
app.add_handler(te.CommandHandler("partage_freesurf", partage_freesurf))
app.run_polling(poll_interval=5)
# app.add_handler(te.CommandHandler("help_novice", help_novice_codage))


# build cmd for share connexion vpn
# condif free surf + carte cr√©dit

"""'async def roadmap_hack(update: Update, context: te.CallbackContext):
    try:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"{update.message.from_user.first_name} cette fonctionnalit√© est en cours de maintenance. D√®s qu'elle sera disponible, je te ferai savoir."
        )
    except:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"{update.message.from_user.first_name}, une erreur est survenue lors du traitement de votre requ√™te. Veuillez r√©essayer encore.\nR√©ssource sera disponible le {date.datetime(2024, 8, 8, 24, 00, 00)}",
        )"""
